//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Certify.Locales {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Certify.Locales.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string About {
            get {
                return ResourceManager.GetString("About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current Language Translator: .
        /// </summary>
        public static string About_LanguageTranslator {
            get {
                return ResourceManager.GetString("About_LanguageTranslator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for Updates...
        /// </summary>
        public static string AboutControl_CheckForUpdateButton {
            get {
                return ResourceManager.GetString("AboutControl_CheckForUpdateButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter Key...
        /// </summary>
        public static string AboutControl_EnterKey {
            get {
                return ResourceManager.GetString("AboutControl_EnterKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Purchase License Key...
        /// </summary>
        public static string AboutControl_Register {
            get {
                return ResourceManager.GetString("AboutControl_Register", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Registered.
        /// </summary>
        public static string AboutControl_RegistrationTypeLabel {
            get {
                return ResourceManager.GetString("AboutControl_RegistrationTypeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Feedback.
        /// </summary>
        public static string AboutControl_SendFeedback {
            get {
                return ResourceManager.GetString("AboutControl_SendFeedback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Support.
        /// </summary>
        public static string AboutControl_Support {
            get {
                return ResourceManager.GetString("AboutControl_Support", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This version is free for evaluation and will manage a limited number of certificates. To remove this limitation please purchase a registration key at https://certifytheweb.com/register. Registered users can get support by emailing support@certifytheweb.com.
        /// </summary>
        public static string AboutControl_TrialDetailLabel {
            get {
                return ResourceManager.GetString("AboutControl_TrialDetailLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced.
        /// </summary>
        public static string Advanced {
            get {
                return ResourceManager.GetString("Advanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alert.
        /// </summary>
        public static string Alert {
            get {
                return ResourceManager.GetString("Alert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ....
        /// </summary>
        public static string Browser {
            get {
                return ResourceManager.GetString("Browser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Challenge.
        /// </summary>
        public static string Challenge {
            get {
                return ResourceManager.GetString("Challenge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Challenge Error.
        /// </summary>
        public static string ChallengeError {
            get {
                return ResourceManager.GetString("ChallengeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comments: .
        /// </summary>
        public static string Comments {
            get {
                return ResourceManager.GetString("Comments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Auto Renew.
        /// </summary>
        public static string Configure_Auto_Renew {
            get {
                return ResourceManager.GetString("Configure_Auto_Renew", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm Delete.
        /// </summary>
        public static string ConfirmDelete {
            get {
                return ResourceManager.GetString("ConfirmDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add/Update Stored Credential.
        /// </summary>
        public static string Credentials_EditCredential {
            get {
                return ResourceManager.GetString("Credentials_EditCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stored credentials are required to make automated calls to APIs and other resources during certificate renewal and deployment. These credentials are protected using the Windows Data Protection APIs and stored on this machine..
        /// </summary>
        public static string Credentials_Intro {
            get {
                return ResourceManager.GetString("Credentials_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To add this server to your dashboard, provide your https://certifytheweb.com/profile sign in details or register a new account:.
        /// </summary>
        public static string Dashboard_AddIntro {
            get {
                return ResourceManager.GetString("Dashboard_AddIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new account.
        /// </summary>
        public static string Dashboard_NewAccount {
            get {
                return ResourceManager.GetString("Dashboard_NewAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string Dashboard_Password {
            get {
                return ResourceManager.GetString("Dashboard_Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        public static string Dashboard_Register {
            get {
                return ResourceManager.GetString("Dashboard_Register", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string Delete {
            get {
                return ResourceManager.GetString("Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discard Changes.
        /// </summary>
        public static string DiscardChanges {
            get {
                return ResourceManager.GetString("DiscardChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Email Address.
        /// </summary>
        public static string Email_Address {
            get {
                return ResourceManager.GetString("Email_Address", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString("Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expired {0} days ago.
        /// </summary>
        public static string ExpiryDateConverter_CertificateExpiredNDaysAgo {
            get {
                return ResourceManager.GetString("ExpiryDateConverter_CertificateExpiredNDaysAgo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expired {0} hours ago.
        /// </summary>
        public static string ExpiryDateConverter_CertificateExpiredNHoursAgo {
            get {
                return ResourceManager.GetString("ExpiryDateConverter_CertificateExpiredNHoursAgo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expires in {0} days.
        /// </summary>
        public static string ExpiryDateConverter_CertificateExpiresIn {
            get {
                return ResourceManager.GetString("ExpiryDateConverter_CertificateExpiresIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expires in {0} hours.
        /// </summary>
        public static string ExpiryDateConverter_CertificateExpiresInNHours {
            get {
                return ResourceManager.GetString("ExpiryDateConverter_CertificateExpiresInNHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No current certificate..
        /// </summary>
        public static string ExpiryDateConverter_NoCurrentCertificate {
            get {
                return ResourceManager.GetString("ExpiryDateConverter_NoCurrentCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to failed.
        /// </summary>
        public static string failed {
            get {
                return ResourceManager.GetString("failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading....
        /// </summary>
        public static string General_Loading {
            get {
                return ResourceManager.GetString("General_Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add to Reporting Dashboard.
        /// </summary>
        public static string GettingStarted_AddToDashboard {
            get {
                return ResourceManager.GetString("GettingStarted_AddToDashboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dashboard.
        /// </summary>
        public static string GettingStarted_Dashboard {
            get {
                return ResourceManager.GetString("GettingStarted_Dashboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use the reporting dashboard to easily view certificate renewal status across one or more servers..
        /// </summary>
        public static string GettingStarted_DashboardIntro {
            get {
                return ResourceManager.GetString("GettingStarted_DashboardIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Dashboard.
        /// </summary>
        public static string GettingStarted_ViewDashboard {
            get {
                return ResourceManager.GetString("GettingStarted_ViewDashboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import.
        /// </summary>
        public static string Import {
            get {
                return ResourceManager.GetString("Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge multiple domains/certificates per site into one  Managed Certificate.
        /// </summary>
        public static string ImportDlg_Merge {
            get {
                return ResourceManager.GetString("ImportDlg_Merge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are upgrading from an older version of Certify. This will create new  Managed Certificates which you can then edit to adjust the renewal settings etc..
        /// </summary>
        public static string ImportDlg_OpComment {
            get {
                return ResourceManager.GetString("ImportDlg_OpComment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Import  Managed Certificates.
        /// </summary>
        public static string ImportDlg_OpTitle {
            get {
                return ResourceManager.GetString("ImportDlg_OpTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip Import.
        /// </summary>
        public static string ImportDlg_Skip {
            get {
                return ResourceManager.GetString("ImportDlg_Skip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certify - Import.
        /// </summary>
        public static string ImportDlg_Title {
            get {
                return ResourceManager.GetString("ImportDlg_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In Progress.
        /// </summary>
        public static string In_Progress {
            get {
                return ResourceManager.GetString("In_Progress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Info.
        /// </summary>
        public static string Info {
            get {
                return ResourceManager.GetString("Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certify Certificate Manager Contributors （https://certifytheweb.com）.
        /// </summary>
        public static string LanguageAuthor {
            get {
                return ResourceManager.GetString("LanguageAuthor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Key.
        /// </summary>
        public static string LicenseKey {
            get {
                return ResourceManager.GetString("LicenseKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get started by registering a new contact, then you can start requesting certificates..
        /// </summary>
        public static string MainWindow_GetStartGuideWithNewCert {
            get {
                return ResourceManager.GetString("MainWindow_GetStartGuideWithNewCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IIS Was not detected on this server, important functionality will be unavailable. If you know IIS is installed and working on this server, please report this error to support@certifytheweb.com providing details of your server Operating System version and IIS versions.
        /// </summary>
        public static string MainWindow_IISNotAvailable {
            get {
                return ResourceManager.GetString("MainWindow_IISNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your license key has expired or is no longer active..
        /// </summary>
        public static string MainWindow_KeyExpired {
            get {
                return ResourceManager.GetString("MainWindow_KeyExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will renew certificates for all auto-renewed items. Proceed?.
        /// </summary>
        public static string MainWindow_RenewAllConfirm {
            get {
                return ResourceManager.GetString("MainWindow_RenewAllConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  [Community Edition].
        /// </summary>
        public static string MainWindow_TitleTrialPostfix {
            get {
                return ResourceManager.GetString("MainWindow_TitleTrialPostfix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are using the evaluation version of this app. Please purchase a registration key to upgrade. See the Register option on the About tab..
        /// </summary>
        public static string MainWindow_TrialLimitationReached {
            get {
                return ResourceManager.GetString("MainWindow_TrialLimitationReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Visit download page now?.
        /// </summary>
        public static string MainWindow_VisitDownloadPage {
            get {
                return ResourceManager.GetString("MainWindow_VisitDownloadPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Managed Certificates.
        /// </summary>
        public static string Managed_Certificates {
            get {
                return ResourceManager.GetString("Managed_Certificates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Managed Certificates.
        /// </summary>
        public static string Managed_Sites {
            get {
                return ResourceManager.GetString("Managed_Sites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   Deployment of your certificate can be automatic or you can perform your own deployment tasks (see the Tasks tab)..
        /// </summary>
        public static string ManagedCertificates_Deployment_Intro {
            get {
                return ResourceManager.GetString("ManagedCertificates_Deployment_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter....
        /// </summary>
        public static string ManagedCertificates_Filter {
            get {
                return ResourceManager.GetString("ManagedCertificates_Filter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Managed Certificate or select New Certificate to begin..
        /// </summary>
        public static string ManagedCertificates_NoItemSelectedTip {
            get {
                return ResourceManager.GetString("ManagedCertificates_NoItemSelectedTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deployment Tasks run (in the order shown) after the standard Deployment process has completed (see the Deployment tab). Tasks can be run immediately after the certificate has updated or they can be deferred (to run manually or via a scheduled task etc.). You can also drag tasks to re-order them:.
        /// </summary>
        public static string ManagedCertificates_Tasks_DeploymentIntro {
            get {
                return ResourceManager.GetString("ManagedCertificates_Tasks_DeploymentIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tasks are an optional way to work with your latest certificate or trigger other actions before or after renewal. .
        /// </summary>
        public static string ManagedCertificates_Tasks_Intro {
            get {
                return ResourceManager.GetString("ManagedCertificates_Tasks_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can optionally add any number of tasks to run before the certificate request begins:.
        /// </summary>
        public static string ManagedCertificates_Tasks_PrerequestIntro {
            get {
                return ResourceManager.GetString("ManagedCertificates_Tasks_PrerequestIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are unsaved changes to the selected site. Discard changes?.
        /// </summary>
        public static string ManagedCertificates_UnsavedWarning {
            get {
                return ResourceManager.GetString("ManagedCertificates_UnsavedWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to e.g. test.com, www.test.com or *.test.com.
        /// </summary>
        public static string ManagedCertificateSettings_AddDomainsHelpText {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_AddDomainsHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add domains to certificate:.
        /// </summary>
        public static string ManagedCertificateSettings_AddDomainsToCertificate {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_AddDomainsToCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto create/update IIS bindings (uses SNI).
        /// </summary>
        public static string ManagedCertificateSettings_AutoUpdateBinding {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_AutoUpdateBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: these setting only apply to new https bindings, existing bindings are only updated with the new certificate. Using a fixed IP for multiple certificates will cause a binding conflict on Windows, use with caution..
        /// </summary>
        public static string ManagedCertificateSettings_BindingNote {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_BindingNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind to Specific IP:.
        /// </summary>
        public static string ManagedCertificateSettings_BindIP {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_BindIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bind to Specific Port:.
        /// </summary>
        public static string ManagedCertificateSettings_BindPort {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_BindPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ....
        /// </summary>
        public static string ManagedCertificateSettings_BrowseFolder {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_BrowseFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot check challenges if IIS is not available..
        /// </summary>
        public static string ManagedCertificateSettings_CannotChallengeWithoutIIS {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_CannotChallengeWithoutIIS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Revoked..
        /// </summary>
        public static string ManagedCertificateSettings_Certificate_Revoked {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_Certificate_Revoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Authorities are the organisations who can issue trusted certificates. You need to register an account under Settings for each (ACME) Certificate Authority you wish to use..
        /// </summary>
        public static string ManagedCertificateSettings_CertificateAuthority_Intro {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_CertificateAuthority_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Authority.
        /// </summary>
        public static string ManagedCertificateSettings_CertificateAuthority_Title {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_CertificateAuthority_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The certificate file for this item has not been created yet or the file has been deleted..
        /// </summary>
        public static string ManagedCertificateSettings_CertificateNotReady {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_CertificateNotReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Certificate Path: [to be set].
        /// </summary>
        public static string ManagedCertificateSettings_CertificatePathEmpty {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_CertificatePathEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: This certificate has been revoked..
        /// </summary>
        public static string ManagedCertificateSettings_CertificateRevokeWarning {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_CertificateRevokeWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} challenge is only available for IIS versions 8+..
        /// </summary>
        public static string ManagedCertificateSettings_ChallengeNotAvailable {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_ChallengeNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Challenge Test Failed.
        /// </summary>
        public static string ManagedCertificateSettings_ChallengeTestFailed {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_ChallengeTestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Challenge Type:.
        /// </summary>
        public static string ManagedCertificateSettings_ChallengeTypes {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_ChallengeTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Check Failed:
        ///{0}.
        /// </summary>
        public static string ManagedCertificateSettings_ConfigurationCheckFailed {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_ConfigurationCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration Checked OK.
        /// </summary>
        public static string ManagedCertificateSettings_ConfigurationCheckOk {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_ConfigurationCheckOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to delete this item? Deleting the item will not affect IIS settings etc..
        /// </summary>
        public static string ManagedCertificateSettings_ConfirmDelete {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_ConfirmDelete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to revoke this certificate?.
        /// </summary>
        public static string ManagedCertificateSettings_ConfirmRevokeCertificate {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_ConfirmRevokeCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Managed Certificate.
        /// </summary>
        public static string ManagedCertificateSettings_DefaultTitle {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_DefaultTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display Name:.
        /// </summary>
        public static string ManagedCertificateSettings_DisplayName {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain.
        /// </summary>
        public static string ManagedCertificateSettings_Domain {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_Domain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following selected domains will be included as a single certificate request. The issuing Certificate Authority must be able to access all of these domains via port 80 (for HTTP challenges) or port 443 (for TLS-SNI challenges) for the certification process to work..
        /// </summary>
        public static string ManagedCertificateSettings_DomainIncluded {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_DomainIncluded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select domains from existing hostname bindings on an website or add the domains manually. You can then select Request Certificate above or modify options as required. To specify a custom CSR see the Advanced tab..
        /// </summary>
        public static string ManagedCertificateSettings_DomainsIntro {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_DomainsIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Auto Renewal.
        /// </summary>
        public static string ManagedCertificateSettings_EnableAutoRenewal {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_EnableAutoRenewal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Note: To export this certificate use the Manage Computer Certificates option in Windows. .
        /// </summary>
        public static string ManagedCertificateSettings_ExportTip {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_ExportTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Body:.
        /// </summary>
        public static string ManagedCertificateSettings_HookBody {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_HookBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ContentType:.
        /// </summary>
        public static string ManagedCertificateSettings_HookContentType {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_HookContentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method:.
        /// </summary>
        public static string ManagedCertificateSettings_HookMethod {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_HookMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Method for the webhook must be set..
        /// </summary>
        public static string ManagedCertificateSettings_HookMethodMustBeSet {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_HookMethodMustBeSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Url for the webhook must be set to a valid Url..
        /// </summary>
        public static string ManagedCertificateSettings_HookMustBeValidUrl {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_HookMustBeValidUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Webhook Trigger:.
        /// </summary>
        public static string ManagedCertificateSettings_HookTrigger {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_HookTrigger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Url:.
        /// </summary>
        public static string ManagedCertificateSettings_HookUrl {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_HookUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include.
        /// </summary>
        public static string ManagedCertificateSettings_Include {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_Include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are attempting to create an SNI binding that also has a specific bound IP address. It is recommended that SNI bindings use All Unassigned instead. Do you wish to continue saving?.
        /// </summary>
        public static string ManagedCertificateSettings_InvalidSNI {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_InvalidSNI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The log file for this item has not been created yet..
        /// </summary>
        public static string ManagedCertificateSettings_LogNotCreated {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_LogNotCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A name is required for this item..
        /// </summary>
        public static string ManagedCertificateSettings_NameRequired {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_NameRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Primary Domain must be included.
        /// </summary>
        public static string ManagedCertificateSettings_NeedPrimaryDomain {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_NeedPrimaryDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No changes were made, skipping save.
        /// </summary>
        public static string ManagedCertificateSettings_NoChanges {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_NoChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one fully qualified hostname (e.g &apos;github.com&apos;) or wildcard (e.g. &apos;*.github.com) is required to create a certificate..
        /// </summary>
        public static string ManagedCertificateSettings_NoHostNameBindingWarning {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_NoHostNameBindingWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notify Primary Contact On Renewal Failure.
        /// </summary>
        public static string ManagedCertificateSettings_NotifyPrimaryContactOnRenewalFailure {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_NotifyPrimaryContactOnRenewalFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Log File.
        /// </summary>
        public static string ManagedCertificateSettings_OpenLogFile {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_OpenLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform challenge response config checks.
        /// </summary>
        public static string ManagedCertificateSettings_PerformChallengeResponseConfigCheck {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_PerformChallengeResponseConfigCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Perform web application auto config.
        /// </summary>
        public static string ManagedCertificateSettings_PerformWebAppAutoConfig {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_PerformWebAppAutoConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pre-request PS Script:.
        /// </summary>
        public static string ManagedCertificateSettings_PerRequsetScript {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_PerRequsetScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post-request PS Script:.
        /// </summary>
        public static string ManagedCertificateSettings_PostRequestScript {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_PostRequestScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary.
        /// </summary>
        public static string ManagedCertificateSettings_Primary {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_Primary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Re-apply Certificate to Bindings.
        /// </summary>
        public static string ManagedCertificateSettings_ReapplyCertificate {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_ReapplyCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Request Certificate.
        /// </summary>
        public static string ManagedCertificateSettings_RequestCertificate {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_RequestCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revoke Certificate.
        /// </summary>
        public static string ManagedCertificateSettings_RevokeCertificate {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_RevokeCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Revoking Certificate:
        ///{0}.
        /// </summary>
        public static string ManagedCertificateSettings_RevokeCertificateError {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_RevokeCertificateError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domains and Subdomains to include:.
        /// </summary>
        public static string ManagedCertificateSettings_SelectDomain {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_SelectDomain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select None.
        /// </summary>
        public static string ManagedCertificateSettings_SelectNone {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_SelectNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Site (optional):.
        /// </summary>
        public static string ManagedCertificateSettings_SelectWebsite {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_SelectWebsite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the site to create a certificate for..
        /// </summary>
        public static string ManagedCertificateSettings_SelectWebsiteOrCert {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_SelectWebsiteOrCert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        public static string ManagedCertificateSettings_Tab_Options {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_Tab_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use SNI (IIS 8+):.
        /// </summary>
        public static string ManagedCertificateSettings_UseSNI {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_UseSNI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use specific IP/Port bindings.
        /// </summary>
        public static string ManagedCertificateSettings_UseSpecificBinding {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_UseSpecificBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View Certificate.
        /// </summary>
        public static string ManagedCertificateSettings_ViewCertificate {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_ViewCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Webhook request error: {0}.
        /// </summary>
        public static string ManagedCertificateSettings_WebhookRequestError {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_WebhookRequestError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Webhook request {0}: HTTP {1}.
        /// </summary>
        public static string ManagedCertificateSettings_WebhookRequestResult {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_WebhookRequestResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Webhook Test.
        /// </summary>
        public static string ManagedCertificateSettings_WebhookTest {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_WebhookTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Webhook Test Failed.
        /// </summary>
        public static string ManagedCertificateSettings_WebhookTestFailed {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_WebhookTestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Site Root Directory.
        /// </summary>
        public static string ManagedCertificateSettings_WebsiteRoot {
            get {
                return ResourceManager.GetString("ManagedCertificateSettings_WebsiteRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        public static string ManagedCertificatesSettings_RefreshDomains {
            get {
                return ResourceManager.GetString("ManagedCertificatesSettings_RefreshDomains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New Certificate.
        /// </summary>
        public static string New_Certificate {
            get {
                return ResourceManager.GetString("New_Certificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was a problem registering with the Certificate Authority using this email address. Check the email address is valid and that this computer has an open connection to the internet (outgoing https is required for API calls)..
        /// </summary>
        public static string New_Contact_EmailError {
            get {
                return ResourceManager.GetString("New_Contact_EmailError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To proceed, confirm that you agree to the current terms and conditions for this Certificate Authority..
        /// </summary>
        public static string New_Contact_NeedAgree {
            get {
                return ResourceManager.GetString("New_Contact_NeedAgree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To request certificates you need to register with each of the Certificate Authorities that you want to use..
        /// </summary>
        public static string New_Contact_Tip1 {
            get {
                return ResourceManager.GetString("New_Contact_Tip1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email address provided may be used to notify you of upcoming certificate renewals if required. Invalid email addresses will be rejected by the Certificate Authority..
        /// </summary>
        public static string New_Contact_Tip2 {
            get {
                return ResourceManager.GetString("New_Contact_Tip2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string Password {
            get {
                return ResourceManager.GetString("Password", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferred Certificate Authority.
        /// </summary>
        public static string PreferredCertificateAuthority {
            get {
                return ResourceManager.GetString("PreferredCertificateAuthority", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no requests currently in progress..
        /// </summary>
        public static string ProgressMonitor_NoProgress {
            get {
                return ResourceManager.GetString("ProgressMonitor_NoProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register Contact.
        /// </summary>
        public static string Register_Contact {
            get {
                return ResourceManager.GetString("Register_Contact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registration.
        /// </summary>
        public static string Registration {
            get {
                return ResourceManager.GetString("Registration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was a problem trying to validate your license key. Please try again or contact support..
        /// </summary>
        public static string Registration_KeyValidationError {
            get {
                return ResourceManager.GetString("Registration_KeyValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter the email address you used when registering your key..
        /// </summary>
        public static string Registration_NeedEmail {
            get {
                return ResourceManager.GetString("Registration_NeedEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please enter your license key..
        /// </summary>
        public static string Registration_NeedKey {
            get {
                return ResourceManager.GetString("Registration_NeedKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was a problem beginning the license validation process..
        /// </summary>
        public static string Registration_UnableToVerify {
            get {
                return ResourceManager.GetString("Registration_UnableToVerify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Registered Email Address.
        /// </summary>
        public static string RegistrationEmailAddress {
            get {
                return ResourceManager.GetString("RegistrationEmailAddress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Renew All.
        /// </summary>
        public static string Renew_All {
            get {
                return ResourceManager.GetString("Renew_All", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Changes.
        /// </summary>
        public static string SaveChanges {
            get {
                return ResourceManager.GetString("SaveChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save Error.
        /// </summary>
        public static string SaveError {
            get {
                return ResourceManager.GetString("SaveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The auto renewal task is already configured. If required you can change the admin user account used to execute the task..
        /// </summary>
        public static string ScheduledTaskConfig_AlreadyConfiged {
            get {
                return ResourceManager.GetString("ScheduledTaskConfig_AlreadyConfiged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to create scheduled task with given credentials.
        /// </summary>
        public static string ScheduledTaskConfig_FailedToCreateTask {
            get {
                return ResourceManager.GetString("ScheduledTaskConfig_FailedToCreateTask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide the username and password for an admin level user..
        /// </summary>
        public static string ScheduledTaskConfig_PleaseProvideCredential {
            get {
                return ResourceManager.GetString("ScheduledTaskConfig_PleaseProvideCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scheduled task created.
        /// </summary>
        public static string ScheduledTaskConfig_TaskCreated {
            get {
                return ResourceManager.GetString("ScheduledTaskConfig_TaskCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To perform auto renewal of certificates, a task will be created in the Windows Task Scheduler. This task needs to run as an Admin level user in order to do certificate management and IIS management tasks..
        /// </summary>
        public static string ScheduledTaskConfig_Tip {
            get {
                return ResourceManager.GetString("ScheduledTaskConfig_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Background Service (runs as Local System).
        /// </summary>
        public static string ScheduledTaskConfig_UseBackgroundService {
            get {
                return ResourceManager.GetString("ScheduledTaskConfig_UseBackgroundService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username (DOMAIN\User).
        /// </summary>
        public static string ScheduledTaskConfig_UserNameLabel {
            get {
                return ResourceManager.GetString("ScheduledTaskConfig_UserNameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use a Scheduled Task (runs as specified user).
        /// </summary>
        public static string ScheduledTaskConfig_UseScheduledTask {
            get {
                return ResourceManager.GetString("ScheduledTaskConfig_UseScheduledTask", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Auto Renewal.
        /// </summary>
        public static string ScheduledTaskConfig_WindowTitle {
            get {
                return ResourceManager.GetString("ScheduledTaskConfig_WindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select All.
        /// </summary>
        public static string SelectAll {
            get {
                return ResourceManager.GetString("SelectAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send.
        /// </summary>
        public static string Send {
            get {
                return ResourceManager.GetString("Send", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send Feedback.
        /// </summary>
        public static string Send_Feedback {
            get {
                return ResourceManager.GetString("Send_Feedback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Email Address (optional):.
        /// </summary>
        public static string Send_Feedback_Email {
            get {
                return ResourceManager.GetString("Send_Feedback_Email", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, there was a problem submitting your feedback..
        /// </summary>
        public static string Send_Feedback_Error {
            get {
                return ResourceManager.GetString("Send_Feedback_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Oops, something went wrong. Please tell us about it..
        /// </summary>
        public static string Send_Feedback_Exception {
            get {
                return ResourceManager.GetString("Send_Feedback_Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you have any suggestions?.
        /// </summary>
        public static string Send_Feedback_Quest {
            get {
                return ResourceManager.GetString("Send_Feedback_Quest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thanks, your feedback has now been submitted..
        /// </summary>
        public static string Send_Feedback_Success {
            get {
                return ResourceManager.GetString("Send_Feedback_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Thanks for submitting feedback to our developers. Please email support@certifytheweb.com if you have a question..
        /// </summary>
        public static string Send_Feedback_Tip {
            get {
                return ResourceManager.GetString("Send_Feedback_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto Renewal Interval (Days).
        /// </summary>
        public static string Settings_AutoRenewalInterval {
            get {
                return ResourceManager.GetString("Settings_AutoRenewalInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum Auto Renewal Requests Per Session (0 = Unlimited).
        /// </summary>
        public static string Settings_AutoRenewalRequestLimit {
            get {
                return ResourceManager.GetString("Settings_AutoRenewalRequestLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you register with multiple authorities this may enable you to use automatic Certificate Authority Failover, so if your preferred Certificate Authority can&apos;t issue a new certificate an alternative compatible provider can be used automatically..
        /// </summary>
        public static string Settings_CA_Fallback {
            get {
                return ResourceManager.GetString("Settings_CA_Fallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Certificate Authorities are the organisations who can issue trusted certificates. You need to register an account for each (ACME) Certificate Authority you wish to use. Accounts can either be Production (live, trusted certificates) or Staging (test, non-trusted)..
        /// </summary>
        public static string Settings_CA_Intro {
            get {
                return ResourceManager.GetString("Settings_CA_Intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for updates automatically.
        /// </summary>
        public static string Settings_CheckUpdates {
            get {
                return ResourceManager.GetString("Settings_CheckUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Certificate Cleanup.
        /// </summary>
        public static string Settings_EnableCertificateCleanup {
            get {
                return ResourceManager.GetString("Settings_EnableCertificateCleanup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable DNS Validation Checks (Resolution, CAA, DNSSEC).
        /// </summary>
        public static string Settings_EnableDnsValidation {
            get {
                return ResourceManager.GetString("Settings_EnableDnsValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Encrypted File System (EFS) for sensitive files. This option does not work on all versions of Windows..
        /// </summary>
        public static string Settings_EnableEFS {
            get {
                return ResourceManager.GetString("Settings_EnableEFS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Http Challenge Server.
        /// </summary>
        public static string Settings_EnableHttpChallengeServer {
            get {
                return ResourceManager.GetString("Settings_EnableHttpChallengeServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Proxy API for Domain Config Checks.
        /// </summary>
        public static string Settings_EnableProxyApiForDomainConfig {
            get {
                return ResourceManager.GetString("Settings_EnableProxyApiForDomainConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Status Reports to Dashboard.
        /// </summary>
        public static string Settings_EnableStatusReporting {
            get {
                return ResourceManager.GetString("Settings_EnableStatusReporting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable App Telemetry (feature usage reporting).
        /// </summary>
        public static string Settings_EnableTelemetry {
            get {
                return ResourceManager.GetString("Settings_EnableTelemetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore stopped IIS sites for new certificates and renewals.
        /// </summary>
        public static string Settings_IgnoreStoppedSites {
            get {
                return ResourceManager.GetString("Settings_IgnoreStoppedSites", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary Contact:.
        /// </summary>
        public static string Settings_PrimaryContact {
            get {
                return ResourceManager.GetString("Settings_PrimaryContact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to succeeded.
        /// </summary>
        public static string succeed {
            get {
                return ResourceManager.GetString("succeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test.
        /// </summary>
        public static string Test {
            get {
                return ResourceManager.GetString("Test", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Available.
        /// </summary>
        public static string Update_Available {
            get {
                return ResourceManager.GetString("Update_Available", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, the update could not be downloaded. Please try again later..
        /// </summary>
        public static string Update_DownloadFailed {
            get {
                return ResourceManager.GetString("Update_DownloadFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to automatically download the update? You will be notified when it is ready to apply..
        /// </summary>
        public static string Update_DownloadNow {
            get {
                return ResourceManager.GetString("Update_DownloadNow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current app version requires an essential update to ensure continued operation. Please update immediately. Close app now?.
        /// </summary>
        public static string Update_MandatoryUpdateQuit {
            get {
                return ResourceManager.GetString("Update_MandatoryUpdateQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A new update is ready to apply. Would you like to install it now?.
        /// </summary>
        public static string Update_ReadyToApply {
            get {
                return ResourceManager.GetString("Update_ReadyToApply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are using the latest version..
        /// </summary>
        public static string UpdateCheckLatestVersion {
            get {
                return ResourceManager.GetString("UpdateCheckLatestVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validate Key.
        /// </summary>
        public static string ValidateKey {
            get {
                return ResourceManager.GetString("ValidateKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes, I Agree.
        /// </summary>
        public static string Yes_I_Agree {
            get {
                return ResourceManager.GetString("Yes_I_Agree", resourceCulture);
            }
        }
    }
}
