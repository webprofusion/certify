name: build and test .NET Core 8.0 Linux

on:
  push:
  pull_request:
    branches: [ release, development ]
    paths:
    - '**.cs'
    - '**.csproj'

env:
  DOTNET_VERSION: '8.0.100' # The .NET SDK version to use

jobs:
  build-and-test:

    name: build-and-test-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Clone webprofusion/certify
      uses: actions/checkout@v3

    - name: Clone webprofusion/anvil
      uses: actions/checkout@master
      with:
        repository: webprofusion/anvil
        ref: refs/heads/main
        path: ./libs/anvil

    - name: Clone webprofusion/certify-plugins (development)
      if: ${{ contains(github.ref_name, '_dev') }}
      uses: actions/checkout@master
      with:
        repository: webprofusion/certify-plugins
        ref: refs/heads/development    
        path: ./certify-plugins

    - name: Clone webprofusion/certify-plugins (release)
      if: ${{ contains(github.ref_name, '_rel') }}
      uses: actions/checkout@master
      with:
        repository: webprofusion/certify-plugins
        ref: refs/heads/release    
        path: ./certify-plugins

    # - name: Clone webprofusion/certify-internal
    #   uses: actions/checkout@master
    #   with:
    #     repository: webprofusion/certify-internal
    #     ref: refs/heads/main
    #     path: ./certify-internal
    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install dependencies
      run: dotnet restore
      working-directory: ./src/Certify.Tests/Certify.Core.Tests.Unit
      
    - name: Build
      run: dotnet build -c Release --no-restore -f net8.0
      working-directory: ./src/Certify.Tests/Certify.Core.Tests.Unit
    
    - name: Test
      run: dotnet test Certify.Core.Tests.Unit.dll -v normal -f net8.0 --logger trx --results-directory "TestResults-8_0-${{ matrix.os }}"
      working-directory: ./src/Certify.Tests/Certify.Core.Tests.Unit/bin/Release/net8.0

    - name: Upload dotnet test results
      uses: actions/upload-artifact@v3
      with:
        name: dotnet-results-8_0-${{ matrix.os }}
        path: TestResults-8_0-${{ matrix.os }}
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}
