<UserControl
    x:Class="Certify.UI.Controls.ManagedCertificate.DomainAuthorization"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:Resources="clr-namespace:Certify.Locales;assembly=Certify.Locales"
    xmlns:certifyui="clr-namespace:Certify.UI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:local="clr-namespace:Certify.UI.Controls"
    xmlns:managedcertificate="clr-namespace:Certify.UI.Controls.ManagedCertificate"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:Certify.Models;assembly=Certify.Models"
    xmlns:utils="clr-namespace:Certify.UI.Utils"
    d:DataContext="{d:DesignInstance Type=certifyui:ManagedCertificateViewModelDesign,
                                     IsDesignTimeCreatable=True}"
    d:DesignWidth="500"
    mc:Ignorable="d">

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <StackPanel Margin="8,0,8,8">

            <StackPanel.Resources>
                <utils:InverseBooleanConverter x:Key="InvBoolConverter" />
                <utils:ManagedCertificateHealthVisibilityConverter x:Key="HealthVisibleConverter" />
                <utils:NullVisibilityConverter
                    x:Key="NullVisibleConverter"
                    NotNull="Collapsed"
                    Null="Visible" />
            </StackPanel.Resources>

            <!--  Authorization Types  -->
            <StackPanel>
                <TextBlock Style="{StaticResource Subheading}">Domain Authorization</TextBlock>
                <TextBlock Style="{StaticResource Instructions}" Text="For a certificate to be issued you must prove control of the domains/identifiers in your request. If any included domain fails authorization the certificate request cannot be completed." />
                <TextBlock Style="{StaticResource Instructions}" Text="For domains you can choose to validate using HTTP (port 80), or via DNS." />
            </StackPanel>

            <ItemsControl
                x:Name="ChallengeConfigurations"
                Margin="0,0,0,0"
                ItemsSource="{Binding ChallengeConfigViewModels}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Style="{StaticResource Subheading}">Authorization Settings</TextBlock>
                                <TextBlock
                                    Margin="8,0,0,0"
                                    Style="{StaticResource Subheading}"
                                    Text="{Binding SelectedItem.DomainMatch}" />
                            </StackPanel>
                            <Border Padding="8,8,8,8" Background="{DynamicResource MahApps.Brushes.Control.Background}">
                                <managedcertificate:ChallengeConfigItem DataContext="{Binding}" />
                            </Border>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <StackPanel>

                <TextBlock Style="{StaticResource Instructions}" Text="If you need to authorize multiple domains/identifiers in different ways you can add another authorization config:" />
                <Button
                    x:Name="AddAuth"
                    MaxWidth="160"
                    Margin="16,8,0,0"
                    HorizontalAlignment="Left"
                    Click="AddAuth_Click">
                    Add Configuration
                </Button>
            </StackPanel>
        </StackPanel>
    </ScrollViewer>
</UserControl>
